name: CI

on:
    push:
        branches: [main, develop]
    pull_request:
        branches: [main, develop]

concurrency:
    group: ${{ github.workflow }}-${{ github.ref }}
    cancel-in-progress: true

jobs:
    test:
        name: Test (Node ${{ matrix.node-version }})
        runs-on: ubuntu-latest
        timeout-minutes: 10

        strategy:
            fail-fast: false
            matrix:
                node-version: [18.x, 20.x, 22.x]

        steps:
            - name: Checkout code
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0

            - name: Setup pnpm
              uses: pnpm/action-setup@v4
              with:
                  version: 9
                  run_install: false

            - name: Setup Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v4
              with:
                  node-version: ${{ matrix.node-version }}
                  cache: pnpm

            - name: Get pnpm store directory
              shell: bash
              run: echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

            - name: Cache pnpm store
              uses: actions/cache@v4
              with:
                  path: ${{ env.STORE_PATH }}
                  key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
                  restore-keys: |
                      ${{ runner.os }}-pnpm-store-

            - name: Install dependencies
              run: pnpm install --frozen-lockfile

            - name: Run linter
              run: pnpm run lint

            - name: Run type checking
              run: pnpm run type-check

            - name: Run tests
              run: pnpm run test

            - name: Run tests with coverage
              run: pnpm run test:coverage
              if: matrix.node-version == '20.x'

            - name: Upload coverage reports
              uses: codecov/codecov-action@v4
              if: matrix.node-version == '20.x'
              with:
                  token: ${{ secrets.CODECOV_TOKEN }}
                  files: ./coverage/lcov.info
                  fail_ci_if_error: false
                  verbose: true

    build:
        name: Build
        runs-on: ubuntu-latest
        needs: test
        timeout-minutes: 5

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup pnpm
              uses: pnpm/action-setup@v4
              with:
                  version: 9

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: 20.x
                  cache: pnpm

            - name: Install dependencies
              run: pnpm install --frozen-lockfile

            - name: Build project
              run: pnpm run build

            - name: Verify build artifacts
              run: |
                  echo "Checking build artifacts..."
                  ls -la dist/
                  echo "✅ Build completed successfully"

                  # Verify essential files exist
                  test -f dist/index.js && echo "✅ CJS build found"
                  test -f dist/index.mjs && echo "✅ ESM build found"
                  test -f dist/index.d.ts && echo "✅ Type definitions found"

            - name: Upload build artifacts
              uses: actions/upload-artifact@v4
              with:
                  name: build-artifacts
                  path: dist/
                  retention-days: 7

    publish-check:
        name: Publish Check
        runs-on: ubuntu-latest
        needs: [test, build]
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup pnpm
              uses: pnpm/action-setup@v4
              with:
                  version: 9

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: 20.x
                  registry-url: https://registry.npmjs.org
                  cache: pnpm

            - name: Install dependencies
              run: pnpm install --frozen-lockfile

            - name: Build project
              run: pnpm run build

            - name: Publish dry run
              run: npm publish --dry-run
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
